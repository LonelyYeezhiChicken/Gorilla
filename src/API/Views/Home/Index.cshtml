@{
    ViewData["Title"] = "Gorilla";
}

<div class="container gorilla">
    <h1 class="text-center">猩猩點燈</h1>
    <div id="game" class="row"></div>
    <div class="row justify-content-center">
        <div class="col-sm-8">
            <div id="result" class="text-center"></div>
        </div>
    </div>

    <div class="row justify-content-center m-3">
        <div class="col-sm-8">
            <button class="btn btn-secondary mr-2" onclick="fillInput('呼叫大猩猩')">呼叫大猩猩</button>
            <button class="btn btn-secondary" onclick="fillInput('猩猩數香蕉')">猩猩數香蕉</button>
        </div>
    </div>

    <div class="row justify-content-center">
        <div class="col-sm-8">
            <div class="input-group mb-3">
                <label class="input-group-text" for="something">請輸入指令:</label>
                <input type="text" id="something" class="form-control">
                <div class="input-group-append">
                    <button class="btn btn-primary" onclick="submitForm()">執行</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/lib/phaser3/phaser.min.js"></script>
<script>
    // 創建遊戲配置
    var config = {
      type: Phaser.AUTO,
      width: 900,
      height: 430,
      parent: "game",
      scene: {
        preload: preload,
        create: create,
        update: update
      }
    };

    // 創建遊戲實例
    var game = new Phaser.Game(config);

    let gorilla;
    function preload() {
        this.load.image('background', '/assets/background.webp');
        this.load.spritesheet('gorilla', '/assets/gorilla.png', { frameWidth: 132, frameHeight: 102 });
    }
    
    function create() {
        this.add.image(0, 0, 'background').setOrigin(0, 0);
    
        // 添加gorilla sprite
        gorilla = this.add.sprite(0, 340, 'gorilla');
        gorilla.setOrigin(0, 0);
    
        
        this.anims.create({
            key: 'gorillaAnimation',
            frames: this.anims.generateFrameNumbers('gorilla', { start: 0, end: 5 }),
            frameRate: 10,
            repeat: -1
        });

        this.anims.create({
            key: 'gorillaAnimation2',
            frames: this.anims.generateFrameNumbers('gorilla', { start: 18, end: 24 }),
            frameRate: 10,
            repeat: -1
        });
    
        // 播放gorilla
        gorilla.play('gorillaAnimation');
    }

    let speed = 1;
    let isWoof = false;
    let closeWoof = false;
    function update() {
        
        //轉向
        if(gorilla.x >= 850){
            gorilla.flipX = true;
            speed = -1;
        }else if(gorilla.x <= 50){
            gorilla.flipX = false;
            speed = 1;
        }
        
        // 吼叫
        if(isWoof){
            speed = 0;
            gorilla.play('gorillaAnimation2');
            isWoof = false;
        }

        // 停止吼叫
        if(closeWoof){
           gorilla.play('gorillaAnimation');
           closeWoof = false;
        }
        
        gorilla.x += speed;
    }

    /**---- 其餘JS ----*/

    function submitForm() {
        var something = document.getElementById("something").value;
        var result = document.getElementById("result");

        let tempSpeed = speed;
        isWoof = true;
        fetch('/api/gorilla/todo', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(something)
        })
         .then(response => response.text())
         .then(data => {
             result.textContent = data;

             setTimeout(()=>{
                 closeWoof = true;
                speed = tempSpeed;
             }, 2000);
         })
         .catch(error => {
             console.error('Error:', error);
             result.textContent = "發生錯誤";
         });
    }

    function fillInput(value) {
        document.getElementById("something").value = value;
    }
</script>
